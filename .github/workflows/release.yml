name: QGIS Plugin CI

on:
  push:
    tags:
      - "v*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previoustag
        run: |
          echo "tag=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Generate release notes
        id: release_notes
        run: |
          PREVIOUS_TAG="${{ steps.previoustag.outputs.tag }}"
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "CHANGES<<EOF" >> $GITHUB_OUTPUT
            echo "## Changes since $PREVIOUS_TAG" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..HEAD >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGES<<EOF" >> $GITHUB_OUTPUT
            echo "## Initial Release" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install qgis-plugin-ci

      - name: Package plugin
        run: |
          qgis-plugin-ci package ${GITHUB_REF##*/}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.zip
          body: ${{ steps.release_notes.outputs.CHANGES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}